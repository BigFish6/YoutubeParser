// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    ext.versions = [
            'libVersionCode'     : 30000,
            'libVersionName'     : '3.0.0',
            'compileSdk'         : 28,
            'minSdk'             : 14,
            'targetSdk'          : 28,
            'okhttp'             : '3.12.0',
            'gson'               : '2.8.5',
            'coroutines'         : '1.1.1',
            'kotlin'             : '1.3.31',
            'buildTools'          : '28.0.3',
            'appCompat'          : '1.0.2',
            'constraintLayout'   : '1.1.3',
            'material'           : '1.0.0',
            'androidx'           : '1.0.0',
            'lifecycle'          : '2.0.0',
            'picasso'            : '2.71828',

            'junit'              : '4.12',
            'extJunit'           : '1.1.0',
            'espresso'           : '3.1.1',
            'mockito'            : '2.23.0',

    ]

    ext.kotlin_version = '1.3.11'
    repositories {
        google()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:${versions.kotlin}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

def getKey() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("ytKey")
}

allprojects {
    repositories {
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}